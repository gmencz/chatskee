Update(Role("user"), {
  membership: {
    resource: Collection("users")
  },
  privileges: [{
    resource: Collection("server_users"),
    actions: {
      read: Query(Lambda("ref", Equals(Select(["data", "userRef"], Get(Var("ref"))), CurrentIdentity())))
    }
  }, {
    resource: Collection("servers"),
    actions: {
      read: Query(Lambda("serverRef", Any(Select(["data"], Map(Paginate(Match(Index("server_users_by_user"), CurrentIdentity())), Lambda("ref", Equals(Var("serverRef"), Select(["data", "serverRef"], Get(Var("ref"))))))))))
    }
  }, {
    resource: Collection("users"),
    actions: {
      read: true
    }
  }, {
    resource: Collection("channels"),
    actions: {
      read: Query(Lambda("channelRef", Let([{
        subscribers: Select(["data", "subscribers"], Get(Var("channelRef")), [])
      }], Any(Map(Var("subscribers"), Lambda("subscriberRef", Equals(CurrentIdentity(), Var("subscriberRef"))))))))
    }
  }, {
    resource: Index("dms_by_user1"),
    actions: {
      read: Query(Lambda("dmRef", Equals(CurrentIdentity(), Select([0], Var("dmRef")))))
    }
  }, {
    resource: Index("dms_by_user2"),
    actions: {
      read: Query(Lambda("dmRef", Equals(CurrentIdentity(), Select([0], Var("dmRef")))))
    }
  }, {
    resource: Collection("dms"),
    actions: {
      read: Query(Lambda("dmDocOrRef", If(IsRef(Var("dmDocOrRef")), true, true)))
    }
  }, {
    resource: Index("server_users_by_user"),
    actions: {
      read: Query(Lambda("userAndServerRefs", Equals(CurrentIdentity(), Select([0], Var("userAndServerRefs")))))
    }
  }],
  data: null
})